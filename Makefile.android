# Define environment variables for Android NDK
export NDK?=toolchain/android-ndk-r27
export TARGET?=aarch64-linux-android
export API?=33

export TOOLCHAIN=$(NDK)/toolchains/llvm/prebuilt/linux-x86_64


# Define compiler and tools
CC=$(TOOLCHAIN)/bin/clang --target=$(TARGET)$(API)
CXX=$(TOOLCHAIN)/bin/clang++ --target=$(TARGET)$(API)
AR=$(TOOLCHAIN)/bin/llvm-ar
LD=$(TOOLCHAIN)/bin/ld.lld
RANLIB=$(TOOLCHAIN)/bin/llvm-ranlib
STRIP=$(TOOLCHAIN)/bin/llvm-strip

# Compiler flags
CFLAGS=-D_FILE_OFFSET_BITS=64 -DHAVE_CONFIG_H -I. --static
CXXFLAGS=-Wall -D_FILE_OFFSET_BITS=64 -I. -Ipopt -fPIC -std=c++14

# Linker flags
LDFLAGS=-pie -static-libstdc++

# Source files and object files
UUID_SRCS=$(wildcard uuid/*.c)
UUID_OBJS=$(UUID_SRCS:.c=.o)
POPT_SRCS=$(wildcard popt/*.c)
POPT_OBJS=$(POPT_SRCS:.c=.o)

LIB_NAMES=crc32 support guid gptpart mbrpart basicmbr mbr gpt bsd parttypes attributes diskio diskio-unix
MBR_LIBS=support diskio diskio-unix basicmbr mbrpart
LIB_OBJS=$(LIB_NAMES:=.o)
MBR_LIB_OBJS=$(MBR_LIBS:=.o)

# Targets
all: gdisk sgdisk fixparts

gdisk: $(LIB_OBJS) gdisk.o gpttext.o $(UUID_OBJS)
	$(CXX) $(LIB_OBJS) gdisk.o gpttext.o $(LDFLAGS) $(UUID_OBJS) -o gdisk

cgdisk: $(LIB_OBJS) cgdisk.o gptcurses.o
	$(CXX) $(LIB_OBJS) cgdisk.o gptcurses.o $(LDFLAGS) -luuid -lncursesw -o cgdisk

sgdisk: $(LIB_OBJS) sgdisk.o gptcl.o $(UUID_OBJS) $(POPT_OBJS)
	$(CXX) $(LIB_OBJS) sgdisk.o gptcl.o $(LDFLAGS) $(UUID_OBJS) $(POPT_OBJS) -o sgdisk

fixparts: $(MBR_LIB_OBJS) fixparts.o
	$(CXX) $(MBR_LIB_OBJS) fixparts.o $(LDFLAGS) -o fixparts

clean:
	rm -f core *.o *~ gdisk sgdisk cgdisk fixparts $(UUID_OBJS) $(POPT_OBJS)

# Pattern rules
%.o: %.c
	$(CC) $(CFLAGS) -c $< -o $@

%.o: %.cc
	$(CXX) $(CXXFLAGS) -c $< -o $@

.PHONY: all clean
